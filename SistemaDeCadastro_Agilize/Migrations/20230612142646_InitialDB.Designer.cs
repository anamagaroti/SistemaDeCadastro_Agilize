// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemaDeCadastro_Agilize.Data;

#nullable disable

namespace SistemaDeCadastro_Agilize.Migrations
{
    [DbContext(typeof(SistemasCadastroDBContex))]
    [Migration("20230612142646_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistemaDeCadastro_Agilize.Models.AssociateModel", b =>
                {
                    b.Property<long>("IdAssociate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdAssociate"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("CategoryAssociate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<long>("CepPerson")
                        .HasColumnType("bigint");

                    b.Property<long>("ChnAssociate")
                        .HasColumnType("bigint");

                    b.Property<long>("CpfPerson")
                        .HasColumnType("bigint");

                    b.Property<string>("DateBornPerson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailPerson")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("FirstLicenseAssociate")
                        .HasColumnType("text");

                    b.Property<string>("NamePerson")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NationalityAssociate")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NeighborhoodPerson")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("NumberPerson")
                        .HasColumnType("integer");

                    b.Property<long>("RgPerson")
                        .HasColumnType("bigint");

                    b.Property<string>("SexoPerson")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("TelPerson")
                        .HasColumnType("integer");

                    b.Property<string>("UFPerson")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("ValidadeAssociate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdAssociate");

                    b.ToTable("Associate");
                });

            modelBuilder.Entity("SistemaDeCadastro_Agilize.Models.EmployeeModel", b =>
                {
                    b.Property<long>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdEmployee"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<long>("CepPerson")
                        .HasColumnType("bigint");

                    b.Property<long>("CpfPerson")
                        .HasColumnType("bigint");

                    b.Property<string>("DateBornPerson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailPerson")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NamePerson")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NeighborhoodPerson")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("NumberPerson")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<long>("RgPerson")
                        .HasColumnType("bigint");

                    b.Property<string>("SexoPerson")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("TelPerson")
                        .HasColumnType("integer");

                    b.Property<string>("UFPerson")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("IdEmployee");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("SistemaDeCadastro_Agilize.Models.VehicleModel", b =>
                {
                    b.Property<long>("IdVehicle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdVehicle"));

                    b.Property<long?>("AssociateModelIdAssociate")
                        .HasColumnType("bigint");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Chassi")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<long>("FipeCode")
                        .HasColumnType("bigint");

                    b.Property<decimal>("FipeValue")
                        .HasColumnType("numeric");

                    b.Property<string>("Fuel")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<long>("IdAssociate")
                        .HasColumnType("bigint");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("NF")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int>("NumberDoors")
                        .HasColumnType("integer");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<long>("Renavam")
                        .HasColumnType("bigint");

                    b.Property<string>("VehicleNationality")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("IdVehicle");

                    b.HasAlternateKey("IdAssociate");

                    b.HasIndex("AssociateModelIdAssociate");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("SistemaDeCadastro_Agilize.Models.VehicleModel", b =>
                {
                    b.HasOne("SistemaDeCadastro_Agilize.Models.AssociateModel", null)
                        .WithMany("Vehicle")
                        .HasForeignKey("AssociateModelIdAssociate");
                });

            modelBuilder.Entity("SistemaDeCadastro_Agilize.Models.AssociateModel", b =>
                {
                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
